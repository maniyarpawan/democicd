name: Android CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest
    steps:
    - name: Checkout to Branch
      uses: actions/checkout@v3
    - name: Echo build job
      run: echo "Build job done"
      
    - name: set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build
    - name: Build with Gradle
      run: ./gradlew assembleDebug
    - name: Upload APK
      uses: actions/upload-artifact@v2
      with:
        name: APK
        path: app/build/outputs/apk/debug/**.apk
  
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout to Branch
      uses: actions/checkout@v3
    - name: set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Run Linter and Test
      run: ./gradlew check
    - name: Run lint Ktlint
      run: ./gradlew ktlintCheck --continue
    - name: Run UI test
      uses: ReactiveCircus/android-emulator-runner@v2.28.0
      with:
#         api-level: 29
#         script: ./gradlew connectedDebugAndroidTest
          api-level: 31
          profile: Nexus 6
          arch: arm64-v8a
          force-avd-creation: false
          avd-name: macOS-avd-arm64-v8a-31
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: ./gradlew connectedCheck
    - name: Upload Reports
      uses: actions/upload-artifact@v2
      with:
        name: UI-Test-Reports
        path: app/build/reports
    - name: Upload Reports
      uses: actions/upload-artifact@v2
      with:
        name: Test-Reports
        path: app/build/reports
    - name: Run Tests
      run: ./gradlew test
    - name: Run Test Coverage
      run: ./gradlew testDebugUnitTestCoverageVerification
    - name: Generate JaCoCo Badge
      uses: cicirello/jacoco-badge-generator@v2
      with:
        generate-branches-badge: true
        jacoco-csv-file: "**/testDebugUnitTestCoverage.csv"
    - name: upload coverage report
      uses: actions/upload-artifact@v3.1.2
      with:
        name: coverage report
        path: app/build/reports/jacoco/testDebugUnitTestCoverage/html
      if: always()
    

#   build:

#     runs-on: ubuntu-latest
#     steps:
#     - name: Checkout to Branch
#       uses: actions/checkout@v3
#     - name: Echo build job
#       run: echo "Build job done"
      
#     - name: set up JDK 17
#       uses: actions/setup-java@v3
#       with:
#         java-version: '17'
#         distribution: 'temurin'
#         cache: gradle

#     - name: Grant execute permission for gradlew
#       run: chmod +x gradlew
#     - name: Build with Gradle
#       run: ./gradlew build
      
      
#   test:
#     runs-on: ubuntu-latest
#     steps:
#     - name: Checkout to Branch
#       uses: actions/checkout@v3
#     - name: set up JDK 17
#       uses: actions/setup-java@v3
#       with:
#         java-version: '17'
#         distribution: 'temurin'
#         cache: gradle
#     - name: Grant execute permission for gradlew
#       run: chmod +x gradlew
#     - name: Run Linter and Test
#       run: ./gradlew check
#     - name: Run lint Ktlint
#       run: ./gradlew ktlintCheck --continue
#     - name: Upload Reports
#       uses: actions/upload-artifact@v2
#       with:
#         name: Test-Reports
#         path: app/build/reports
#       if: always()


# #Checkout main branch and build the APK
#   build-master:
#     runs-on: macOS-latest
#     steps:
#     - uses: actions/checkout@v3
#       with:
#         ref: master
#     - name: set up JDK 17
#       uses: actions/setup-java@v3
#       with:
#         java-version: '17'
#         distribution: 'temurin'
#         cache: gradle
#     - name: Grant execute permission for gradlew
#       run: chmod +x gradlew
#     - name: Build Master APK
#       run: ./gradlew assembleDebug && mv
#             app/build/outputs/apk/debug/app-debug.apk
#             app/build/outputs/apk/debug/app-master.apk
#     - name: Upload APK
#       uses: actions/upload-artifact@v1
#       with:
#         name: apk_master
#         path: app/build/outputs/apk/debug/app-master.apk

#     # Checkout PR branch and build the APK
#   build-pr:
#     runs-on: macOS-latest
#     needs: build-master
#     steps:
#     - uses: actions/checkout@v3
#     - name: set up JDK 17
#       uses: actions/setup-java@v3
#       with:
#         java-version: '17'
#         distribution: 'temurin'
#         cache: gradle
#     - name: Grant execute permission for gradlew
#       run: chmod +x gradlew
#     - name: Build PR APK
#       run: ./gradlew assembleDebug && mv
#             app/build/outputs/apk/debug/app-debug.apk
#             app/build/outputs/apk/debug/app-pr.apk
#     - name: Upload APK
#       uses: actions/upload-artifact@v1
#       with:
#         name: apk_pr
#         path: app/build/outputs/apk/debug/app-pr.apk
          
#   apk-diff:
#     needs: [build-master, build-pr]
#     runs-on: macOS-latest
#     steps:
#     - uses: actions/checkout@v1
#     - name: Install diffuse
#       run: brew install JakeWharton/repo/diffuse
#     - name: download artifact
#       uses: actions/download-artifact@v2.1.1
#       with:
#         name: apk_master
#         path: app/build/outputs/apk/debug/app-master
#     - name: download artifact
#       uses: actions/download-artifact@v2.1.1
#       with:
#         name: apk_pr
#         path: app/build/outputs/apk/debug/app-pr
#     - name: run differ
#       run: diffuse diff
#           app/build/outputs/apk/debug/app-master/app-master.apk
#           app/build/outputs/apk/debug/app-pr/app-pr.apk

#   coverage:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v3
#     - name: set up JDK 17
#       uses: actions/setup-java@v3
#       with:
#         java-version: '17'
#         distribution: 'temurin'
#         cache: gradle
#     - name: Grant execute permission for gradlew
#       run: chmod +x gradlew
#     - name: Build
#       run: ./gradlew build
#     - name: Run Tests
#       run: ./gradlew test
#     - name: Run Test Coverage
#       run: ./gradlew testDebugUnitTestCoverageVerification
#     - name: Generate JaCoCo Badge
#       uses: cicirello/jacoco-badge-generator@v2
#       with:
#         generate-branches-badge: true
#         jacoco-csv-file: "**/testDebugUnitTestCoverage.csv"
#     - name: upload coverage report
#       uses: actions/upload-artifact@v3.1.2
#       with:
#         name: coverage report
#         path: app/build/reports/jacoco/testDebugUnitTestCoverage/html


#   run-ui-tests:
#     runs-on: macOS-latest
#     steps:
#     - uses: actions/checkout@v3
#     - name: set up JDK 17
#       uses: actions/setup-java@v3
#       with:
#         java-version: '17'
#         distribution: 'temurin'
#         cache: gradle
#     - name: Grant execute permission for gradlew
#       run: chmod +x gradlew
#     - name: Run UI test
#       uses: ReactiveCircus/android-emulator-runner@v2.28.0
#       with:
#         api-level: 29
#         script: ./gradlew connectedDebugAndroidTest
#     - name: Upload Reports
#       uses: actions/upload-artifact@v2
#       with:
#         name: UI-Test-Reports
#         path: app/build/reports

#   publish:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v3
#     - name: set up JDK 17
#       uses: actions/setup-java@v3
#       with:
#         java-version: '17'
#         distribution: 'temurin'
#         cache: gradle
#     - name: Grant execute permission for gradlew
#       run: chmod +x gradlew
#     - name: Build with Gradle
#       run: ./gradlew assembleDebug
#     - name: Upload APK
#       uses: actions/upload-artifact@v2
#       with:
#         name: APK
#         path: app/build/outputs/apk/debug/**.apk

#   deploy:
#     runs-on: ubuntu-latest
#     steps:
#     - name: Checkout to Branch
#       uses: actions/checkout@v3
#     - name: Docker Build & Push Action
#       uses: mr-smithers-excellent/docker-build-push@v6.2
#       with:
#         image: maniyarpawan/my-demo-cicd-app-image
#         tags: cicd-docker-image-tag
#         registry: docker.io
#         username: ${{ secrets.DOCKER_USERNAME }}
#         password: ${{ secrets.DOCKER_PASSWORD }}
    

#   build:

#     runs-on: ubuntu-latest
#     steps:
#     - name: Checkout to Branch
#       uses: actions/checkout@v3
#     - name: Echo build job
#       run: echo "Build job done"
      
#     - name: set up JDK 17
#       uses: actions/setup-java@v3
#       with:
#         java-version: '17'
#         distribution: 'temurin'
#         cache: gradle

#     - name: Grant execute permission for gradlew
#       run: chmod +x gradlew
#     - name: Build with Gradle
#       run: ./gradlew build

#   test:
#     runs-on: ubuntu-latest
#     needs: build
#     steps:
#     - name: Checkout to Branch
#       uses: actions/checkout@v3
#     - name: Echo test job
#       run: echo "Test job done"
      
#   deploy:
#     runs-on: ubuntu-latest
#     needs: test
#     steps:
#     - name: Checkout to Branch
#       uses: actions/checkout@v3
#     - name: Echo deploy job
#       run: echo "Deploy job done"
      
#   test:
#     runs-on: ubuntu-latest
#     steps:
#     - name: Checkout to Branch
#       uses: actions/checkout@v3
#     - name: set up JDK 17
#       uses: actions/setup-java@v3
#       with:
#         java-version: '17'
#         distribution: 'temurin'
#         cache: gradle
#     - name: Grant execute permission for gradlew
#       run: chmod +x gradlew
#     - name: Run Linter and Test
#       run: ./gradlew check
#     - name: Upload Reports
#       uses: actions/upload-artifact@v2
#       with:
#         name: Test-Reports
#         path: app/build/reports
#       if: always()
  
#   deploy:
#     runs-on: ubuntu-latest
#     steps:
#     - name: Checkout to Branch
#       uses: actions/checkout@v3
#     - name: Docker Build & Push Action
#       uses: mr-smithers-excellent/docker-build-push@v6.2
#       with:
#         image: maniyarpawan/my-demo-cicd-app-image
#         tags: cicd-docker-image-tag
#         registry: docker.io
#         username: ${{ secrets.DOCKER_USERNAME }}
#         password: ${{ secrets.DOCKER_PASSWORD }}
    
